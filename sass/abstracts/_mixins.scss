@mixin displayFlex(
	$direction: row,
	$main: flex-start,
	$cross: flex-start,
	$wrap: wrap
) {
	display: flex;
	flex-direction: $direction;
	flex-wrap: $wrap;
	justify-content: $main;
	align-items: $cross;
}
@mixin fadeIn {
	animation: fadeInAnimation ease 0.5s;
	animation-iteration-count: 1;
	animation-fill-mode: forwards;

	@keyframes fadeInAnimation {
		0% {
			opacity: 0;
		}
		100% {
			opacity: 1;
		}
	}
}
///////////////////
// Gradients /////
/////////////////
@mixin gradientPrimary($direction: 135deg, $color1: 0%, $color2: 100%) {
	background-image: linear-gradient(
		$direction,
		$color-primary $color1,
		$color-primary--light $color2
	);
}
@mixin gradientSecondary($direction: 135deg, $color1: 0%, $color2: 100%) {
	background-image: linear-gradient(
		$direction,
		$color-secondary $color1,
		$color-secondary--light $color2
	);
}
@mixin gradientWhite {
	background-image: linear-gradient(160deg, $color-white 0%, #d0d0d0 100%);
}
@mixin gradientGrey {
	background-image: linear-gradient(
		160deg,
		$color-grey 0%,
		$color-grey--dark 100%
	);
}

@mixin linearGradientDarken($direction: 135deg) {
	background-image: linear-gradient(
		$direction,
		rgba(0, 0, 0, 0) 30%,
		rgba(0, 0, 0, 0.3)
	);
}
// MEDIA QUERY MANAGER
// Assumes 1rem = 10px
/*
Desktop - 1200px
Laptop - 979px
Tablet - 767px
iPhone - 480px
Tiny - 320px
*/
@mixin respond($breakpoint) {
	@if $breakpoint == Tiny {
		@media only screen and (max-width: 20em) {
			@content;
		}
	}
	@if $breakpoint == iPhone {
		@media only screen and (max-width: 30em) {
			@content;
		}
	}
	@if $breakpoint == Tablet {
		@media only screen and (max-width: 48em) {
			@content;
		}
	}
	@if $breakpoint == Laptop {
		@media only screen and (max-width: 61em) {
			@content;
		}
	}
	@if $breakpoint == Desktop {
		@media only screen and (max-width: 75em) {
			@content;
		}
	} @else {
		@media only screen and (max-width: $breakpoint) {
			@content;
		}
	}
}
